#include <iostream>
#include <queue>
#include <string>
using namespace std;

// Function to add a job to the queue
void addJob(queue<string> &jobQueue, const string &job) {
    jobQueue.push(job);
    cout << "Job '" << job << "' added to the queue." << endl;
}

// Function to delete a job from the queue
void deleteJob(queue<string> &jobQueue) {
    if (jobQueue.empty()) {
        cout << "No jobs in the queue to delete." << endl;
    } else {
        cout << "Job '" << jobQueue.front() << "' deleted from the queue." << endl;
        jobQueue.pop();
    }
}

// Function to display the current job queue
void displayQueue(const queue<string> &jobQueue) {
    if (jobQueue.empty()) {
        cout << "Job queue is empty." << endl;
    } else {
        queue<string> tempQueue = jobQueue; // Create a copy of the queue to display
        cout << "Current job queue: ";
        while (!tempQueue.empty()) {
            cout << tempQueue.front() << " ";
            tempQueue.pop();
        }
        cout << endl;
    }
}

int main() {
    queue<string> jobQueue; // Create a queue to hold jobs
    int choice;
    string job;
    
    do {
        cout << "\nJob Queue Menu:\n";
        cout << "1. Add a Job\n";
        cout << "2. Delete a Job\n";
        cout << "3. Display the Job Queue\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
        
        switch (choice) {
            case 1:
                cin.ignore(); // To ignore the newline character left in the input buffer
                cout << "Enter the job name: ";
                getline(cin, job); // To read multi-word job names
                addJob(jobQueue, job);
                break;
            case 2:
                deleteJob(jobQueue);
                break;
            case 3:
                displayQueue(jobQueue);
                break;
            case 4:
                cout << "Exiting program." << endl;
                break;
            default:
                cout << "Invalid choice! Please try again." << endl;
        }
    } while (choice != 4);
    
    return 0;
}
